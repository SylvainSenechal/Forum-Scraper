[{"/home/sylvain/Desktop/github/Forum-Scraper/front/src/App.js":"1","/home/sylvain/Desktop/github/Forum-Scraper/front/src/index.js":"2","/home/sylvain/Desktop/github/Forum-Scraper/front/src/chart.js":"3","/home/sylvain/Desktop/github/Forum-Scraper/front/src/showUser.js":"4","/home/sylvain/Desktop/github/Forum-Scraper/front/src/reportWebVitals.js":"5"},{"size":1120,"mtime":1609264097410,"results":"6","hashOfConfig":"7"},{"size":601,"mtime":1609187525016,"results":"8","hashOfConfig":"7"},{"size":4156,"mtime":1609287212974,"results":"9","hashOfConfig":"7"},{"size":917,"mtime":1609261579673,"results":"10","hashOfConfig":"7"},{"size":362,"mtime":1609169417410,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1fczavt",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/sylvain/Desktop/github/Forum-Scraper/front/src/App.js",["22","23"],"/home/sylvain/Desktop/github/Forum-Scraper/front/src/index.js",[],"/home/sylvain/Desktop/github/Forum-Scraper/front/src/chart.js",[],"/home/sylvain/Desktop/github/Forum-Scraper/front/src/showUser.js",[],"/home/sylvain/Desktop/github/Forum-Scraper/front/src/reportWebVitals.js",[],{"ruleId":"24","severity":1,"message":"25","line":9,"column":13,"nodeType":"26","endLine":21,"endColumn":4},{"ruleId":"24","severity":1,"message":"27","line":21,"column":6,"nodeType":"28","endLine":21,"endColumn":20,"suggestions":"29"},"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'endPage' and 'startPage'. Either include them or remove the dependency array.","ArrayExpression",["30"],{"desc":"31","fix":"32"},"Update the dependencies array to be: [endPage, startPage, triggerScrap]",{"range":"33","text":"34"},[734,748],"[endPage, startPage, triggerScrap]"]